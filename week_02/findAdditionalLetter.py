""" 
This question is asked by Google. You are given two strings, s and t which only consist of lowercase letters. 
t is generated by shuffling the letters in s as well as potentially adding an additional random character. 
Return the letter that was randomly added to t if it exists, otherwise, return ''.
Note: You may assume that at most one additional character can be added to t.

Ex: Given the following strings...

s = "foobar", t = "barfoot", return 't'
s = "ide", t = "idea", return 'a'
s = "coding", t = "ingcod", return ''

"""
import unittest
import collections

class Solution:
    def findAdditionalLetter(self, s, t):
        if len(s) == len(t):
            return ''

        counter = collections.Counter(s)

        for letter in t:
            if letter not in counter or counter[letter] == 0:
                return letter
            counter[letter] -= 1


class TestSum(unittest.TestCase):
    def test_no_letter_addition(self):
        self.assertEqual(Solution().findAdditionalLetter("coding", "ingcod"), '')

    def test_addition_of_not_seen_letter(self):
        self.assertEqual(Solution().findAdditionalLetter("foobar", "barfoot"), 't')

    def test_addition_of_seen_letter(self):
        self.assertEqual(Solution().findAdditionalLetter("aab", "aaba"), 'a')

if __name__ == "__main__":
    unittest.main()
